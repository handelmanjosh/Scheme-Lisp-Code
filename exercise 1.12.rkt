; C at depth d w/ r = until r == n is n!/((n-r)! * r!)
(define (pascal d)
  (define (f! n)
    (if (= n 0) 1 (* n (f! (- n 1))))
    )
  (define (math n r)
    (/ (f! n) (* (f! r) (f! (- n r))))
    )
  (define (iter d i)
    (display (math d i))
    (display " ")
    (cond ((< i d)
           (iter d (+ i 1)))
          )
    )
  (define (iter2 d i)
    (display " \n")
    (iter i 0)
    (cond ((< i d) (iter2 d (+ i 1)))
     
          )
    ) 
(iter2 d 0)
  )
  
(define (pascal-specific row col)
   (cond ((< row col) 0)
         ((or (= 0 col) (= row col)) 1)
         (else (+ (pascal-specific (- row 1) col)
                  (pascal-specific (- row 1) (- col 1))))))

(pascal-specific 50 5)