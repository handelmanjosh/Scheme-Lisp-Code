(define (make-point x y)
  (cons x y)
  )
(define (x point)
  (car point)
  )
(define (y point)
  (cdr point)
  )
(define (square x) (* x x))
(define (distance p1 p2)
  (sqrt (+ (square (- (x p2) (x p1))) (square (- (y p2) (y p1)))))
  )
(define (make-rect p1 p2 p3)
  (define (check-rect? p1 p2 p3)
    (define (good-enough? v1 v2)
      (if (< (abs (- v1 v2)) .1) #t #f)
      )
    (if (good-enough? (+ (square (distance p1 p2)) (square (distance p2 p3))) (square (distance p1 p3)))
     #t #f)
    )
  (if (check-rect? p1 p2 p3) (cons p1 (cons p2 p3)) (display "invalid points"))
  )
(define (rect-point-1 r1)
  (car r1)
  )
(define (rect-point-2 r1)
  (car (cdr r1))
  )
(define (rect-point-3 r1)
  (cdr (cdr r1))
  )

(define (area rect)
  (* (distance (rect-point-1 rect) (rect-point-2 rect)) (distance (rect-point-2 rect) (rect-point-3 rect)))
  )
(define (perimeter rect)
  (+ (* 2 (distance (rect-point-1 rect) (rect-point-2 rect))) (* 2 (distance (rect-point-2 rect) (rect-point-3 rect))))
  )

(define point1 (make-point 1 1))
(define point2 (make-point 1 4))
(define point3 (make-point 5 4))
(define rect1 (make-rect point1 point2 point3))
(display rect1)

(perimeter rect1)
(area rect1)


