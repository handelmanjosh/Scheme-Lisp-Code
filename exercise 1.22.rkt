(#%require (only racket/base current-milliseconds))
(define (runtime) (current-milliseconds))

(define (prime? n primes start-time)
  (define (prime-display n primes start-time)
    (newline)
    (display n)
    (newline)
    (display "Time: ")
    (display (- (runtime) start-time))
    (display "ms")
    (first-three-primes (+ n 2) (+ primes 1))
    )
  (define (smallest-divisor n d)
    (if (integer? (/ n d)) d (smallest-divisor n (+ d 1)))
  )
  (if (= n (smallest-divisor n 2))
     (prime-display n primes start-time) (first-three-primes (+ n 2) primes))
  )

(define (first-three-primes n primes)
  (if (< primes 3) (prime? n primes (runtime)))
  )

(define (prime-in-range low)
  (if (odd? low) (first-three-primes low 0) (first-three-primes (+ low 1) 0))
  )

(prime-in-range 100000)
