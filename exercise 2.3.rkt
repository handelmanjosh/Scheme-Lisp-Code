;rectangles
(define (make-point x y)
  (cons x y)
  )
(define (x-val point)
  (car point)
  )
(define (y-val point)
  (cdr point)
  )
(define (start-segment segment)
  (car segment)
  )
(define (end-segment segment)
  (cdr segment)
  )
(define (print-point point)
  (display "(")
  (display (x-val point))
  (display " ,")
  (display (y-val point))
  (display ")")
  )
(define (print-segment segment)
  (newline)
  (display "(")
  (print-point (car segment))
  (display " --> ")
  (print-point (cdr segment))
  (display ")")
  (newline)
  )
(define (make-segment point1 point2)
  (cons point1 point2)
  )

(define (make-rectangle s1 s2)
  (cons s1 s2)
  )
(define (rect-side-1 rectangle)
  (car rectangle)
  )
(define (rect-side-2 rectangle)
  (cdr rectangle)
  )
(define (seg-length segment)
  (define (square x) (* x x))
  (sqrt (+ (square (- (x-val (end-segment segment)) (x-val (start-segment segment))))
           (square (- (y-val (end-segment segment)) (y-val (start-segment segment))))))
  )

(define (perimeter rectangle)
  (+ (* 2 (seg-length (rect-side-1 rectangle))) (* 2 (seg-length (rect-side-2 rectangle))))
  )
(define (area rectangle)
  (* (seg-length (rect-side-1 rectangle)) (seg-length (rect-side-2 rectangle)))
  )

(define seg1 (make-segment (make-point 1 2) (make-point 1 4)))
(define seg2 (make-segment (make-point 1 2) (make-point 5 2)))
(define rect1 (make-rectangle seg1 seg2))

(perimeter rect1)
(area rect1)




